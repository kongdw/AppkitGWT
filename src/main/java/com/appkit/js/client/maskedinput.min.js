!function (a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : a("object" == typeof exports ? require("jquery") : jQuery)
}(function (a) {
    var B, p = navigator.userAgent, G = /iphone/i.test(p), H = /chrome/i.test(p), C = /android/i.test(p);
    a.mask = {
        definitions: {9: "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]"},
        autoclear: !0,
        dataName: "rawMaskFn",
        placeholder: "_"
    };
    a.fn.extend({
        caret: function (a, f) {
            var e;
            if (0 !== this.length && !this.is(":hidden"))return "number" == typeof a ? (f = "number" == typeof f ? f : a, this.each(function () {
                this.setSelectionRange ?
                    this.setSelectionRange(a, f) : this.createTextRange && (e = this.createTextRange(), e.collapse(!0), e.moveEnd("character", f), e.moveStart("character", a), e.select())
            })) : (this[0].setSelectionRange ? (a = this[0].selectionStart, f = this[0].selectionEnd) : document.selection && document.selection.createRange && (e = document.selection.createRange(), a = 0 - e.duplicate().moveStart("character", -1E5), f = a + e.text.length), {
                begin: a,
                end: f
            })
        }, unmask: function () {
            return this.trigger("unmask")
        }, mask: function (x, f) {
            var e, y, g, u, m, p, k, D;
            return !x &&
            0 < this.length ? (e = a(this[0]), (e = e.data(a.mask.dataName)) ? e() : void 0) : (f = a.extend({
                autoclear: a.mask.autoclear,
                placeholder: a.mask.placeholder,
                completed: null
            }, f), y = a.mask.definitions, g = [], u = k = x.length, m = null, a.each(x.split(""), function (a, f) {
                "?" == f ? (k--, u = a) : y[f] ? (g.push(new RegExp(y[f])), null === m && (m = g.length - 1), u > a && (p = g.length - 1)) : g.push(null)
            }), this.trigger("unmask").each(function () {
                function e() {
                    if (f.completed) {
                        for (var c = m; p >= c; c++)if (g[c] && h[c] === q(c))return;
                        f.completed.call(d)
                    }
                }

                function q(c) {
                    return f.placeholder.charAt(c <
                    f.placeholder.length ? c : 0)
                }

                function r(c) {
                    for (; ++c < k && !g[c];);
                    return c
                }

                function E(c, b) {
                    var v, a;
                    if (!(0 > c)) {
                        v = c;
                        for (a = r(b); k > v; v++)if (g[v]) {
                            if (!(k > a && g[v].test(h[a])))break;
                            h[v] = h[a];
                            h[a] = q(a);
                            a = r(a)
                        }
                        w();
                        d.caret(Math.max(m, c))
                    }
                }

                function I(c) {
                    var b, a, d;
                    b = c;
                    for (c = q(c); k > b; b++)if (g[b]) {
                        if (a = r(b), d = h[b], h[b] = c, !(k > a && g[a].test(d)))break;
                        c = d
                    }
                }

                function J() {
                    var c = d.val(), b = d.caret();
                    if (c.length < D.length) {
                        for (t(!0); 0 < b.begin && !g[b.begin - 1];)b.begin--;
                        if (0 === b.begin)for (; b.begin < m && !g[b.begin];)b.begin++
                    } else for (t(!0); b.begin <
                    k && !g[b.begin];)b.begin++;
                    d.caret(b.begin, b.begin);
                    e()
                }

                function F() {
                    t();
                    d.val() != A && d.change()
                }

                function z(c, b) {
                    var a;
                    for (a = c; b > a && k > a; a++)g[a] && (h[a] = q(a))
                }

                function w() {
                    d.val(h.join(""))
                }

                function t(c) {
                    var b, a, n, e = d.val(), l = -1;
                    for (n = b = 0; k > b; b++)if (g[b]) {
                        for (h[b] = q(b); n++ < e.length;)if (a = e.charAt(n - 1), g[b].test(a)) {
                            h[b] = a;
                            l = b;
                            break
                        }
                        if (n > e.length) {
                            z(b + 1, k);
                            break
                        }
                    } else h[b] === e.charAt(n) && n++, u > b && (l = b);
                    return c ? w() : u > l + 1 ? f.autoclear || h.join("") === K ? (d.val() && d.val(""), z(0, k)) : w() : (w(), d.val(d.val().substring(0,
                        l + 1))), u ? b : m
                }

                var d = a(this), h = a.map(x.split(""), function (c, b) {
                    return "?" != c ? y[c] ? q(b) : c : void 0
                }), K = h.join(""), A = d.val();
                d.data(a.mask.dataName, function () {
                    return a.map(h, function (c, b) {
                        return g[b] && c != q(b) ? c : null
                    }).join("")
                });
                d.one("unmask", function () {
                    d.off(".mask").removeData(a.mask.dataName)
                }).on("focus.mask", function () {
                    if (!d.prop("readonly")) {
                        clearTimeout(B);
                        var c;
                        A = d.val();
                        c = t();
                        B = setTimeout(function () {
                            w();
                            c == x.replace("?", "").length ? d.caret(0, c) : d.caret(c)
                        }, 10)
                    }
                }).on("blur.mask", F).on("keydown.mask",
                    function (c) {
                        if (!d.prop("readonly") && 9 !== c.which) {
                            var b, a, e = c.which || c.keyCode;
                            D = d.val();
                            if (8 === e || 46 === e || G && 127 === e) {
                                b = d.caret();
                                a = b.begin;
                                b = b.end;
                                if (0 === b - a) {
                                    if (46 !== e)for (; 0 <= --a && !g[a];); else a = b = r(a - 1);
                                    b = 46 === e ? r(b) : b
                                }
                                z(a, b);
                                E(a, b - 1);
                                c.preventDefault()
                            } else 13 === e ? F.call(this, c) : 27 === e && (d.val(A), d.caret(0, t()), c.preventDefault())
                        }
                    }).on("keypress.mask", function (c) {
                        if (!d.prop("readonly") && 0 !== c.which) {
                            var b, f, n, m = c.which || c.keyCode, l = d.caret();
                            !(c.ctrlKey || c.altKey || c.metaKey || 32 > m) && m && 13 !==
                            m && (0 !== l.end - l.begin && (z(l.begin, l.end), E(l.begin, l.end - 1)), b = r(l.begin - 1), k > b && (f = String.fromCharCode(m), g[b].test(f))) && ((I(b), h[b] = f, w(), n = r(b), C) ? setTimeout(function () {
                                a.proxy(a.fn.caret, d, n)()
                            }, 0) : d.caret(n), l.begin <= p && e());
                            c.preventDefault();
                            d[0].oninput()
                        }
                    }).on("input.mask paste.mask", function () {
                        d.prop("readonly") || setTimeout(function () {
                            var a = t(!0);
                            d.caret(a);
                            e()
                        }, 0)
                    });
                H && C && d.off("input.mask").on("input.mask", J);
                t()
            }))
        }
    })
});
